name: Create GitHub Release

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      # Determine version change purely from git history to avoid npm registry race conditions
      - name: Read current version
        id: current-version
        shell: bash
        run: echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Read previous version
        id: previous-version
        shell: bash
        run: |
          if git rev-parse HEAD^ >/dev/null 2>&1; then
            git show HEAD^:package.json > prev_package.json || true
            if [ -s prev_package.json ]; then
              echo "version=$(node -p \"require('./prev_package.json').version\")" >> $GITHUB_OUTPUT
            else
              echo "version=0.0.0" >> $GITHUB_OUTPUT
            fi
          else
            # No previous commit (e.g., initial commit)
            echo "version=0.0.0" >> $GITHUB_OUTPUT
          fi

      - name: Compare versions
        id: version-compare
        shell: bash
        run: |
          CUR=${{ steps.current-version.outputs.version }}
          PREV=${{ steps.previous-version.outputs.version }}
          if [ "$CUR" != "$PREV" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "current-version=$CUR" >> $GITHUB_OUTPUT
            echo "previous-version=$PREV" >> $GITHUB_OUTPUT
            echo "Package version changed from $PREV to $CUR"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "current-version=$CUR" >> $GITHUB_OUTPUT
            echo "previous-version=$PREV" >> $GITHUB_OUTPUT
            echo "Package version unchanged: $CUR"
          fi

      - name: Build project
        if: steps.version-compare.outputs.changed == 'true'
        run: npm run build:all

      - name: Generate changelog
        id: changelog
        if: steps.version-compare.outputs.changed == 'true'
        uses: metcalfc/changelog-generator@v4.1.0
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: steps.version-compare.outputs.changed == 'true'
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version-compare.outputs['current-version'] }}
          name: Release v${{ steps.version-compare.outputs['current-version'] }}
          body: |
            ## Changes in this Release
            
            ${{ steps.changelog.outputs.changelog }}
          files: |
            dist/expression-language.js
            dist/expression-language.min.js
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}